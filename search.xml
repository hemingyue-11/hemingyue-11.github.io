<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Tensorflow学习日志（二）：变量初始化</title>
      <link href="/2020/03/09/Tensorflow%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%8F%98%E9%87%8F%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
      <url>/2020/03/09/Tensorflow%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%8F%98%E9%87%8F%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>接下来我们会介绍如何创建和初始化TensorFlow变量</p><h2 id="创建变量"><a href="#创建变量" class="headerlink" title="创建变量"></a>创建变量</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> tensorflow<span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>python<span class="token punctuation">.</span>framework <span class="token keyword">import</span> ops<span class="token comment" spellcheck="true">#创建三个变量</span>weights <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>random_normal<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stddev<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">"weights"</span><span class="token punctuation">)</span>biases <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">"biases"</span><span class="token punctuation">)</span>custom_variable <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">"custom"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#把所有变量的存储在列表中</span>all_variables_list <span class="token operator">=</span> ops<span class="token punctuation">.</span>get_collection<span class="token punctuation">(</span>ops<span class="token punctuation">.</span>GraphKeys<span class="token punctuation">.</span>GLOBAL_VARIABLES<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>在模型进行操作之前必须要初始化变量</p><h3 id="初始化特定的变量"><a href="#初始化特定的变量" class="headerlink" title="初始化特定的变量"></a>初始化特定的变量</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#初始化特定的变量，把想要初始的变量存在variable_list_custom中</span>variable_list_custom <span class="token operator">=</span> <span class="token punctuation">[</span>weights<span class="token punctuation">,</span> custom_variable<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#初始化</span>init_custom_op <span class="token operator">=</span> tf<span class="token punctuation">.</span>variables_initializer<span class="token punctuation">(</span>var_list<span class="token operator">=</span>variable_list_custom<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="全局初始化变量"><a href="#全局初始化变量" class="headerlink" title="全局初始化变量"></a>全局初始化变量</h3><pre class="line-numbers language-python"><code class="language-python">init_all_op <span class="token operator">=</span> tf<span class="token punctuation">.</span>variables_initializer<span class="token punctuation">(</span>var_list<span class="token operator">=</span>all_variables_list<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="继承其它变量的初始化"><a href="#继承其它变量的初始化" class="headerlink" title="继承其它变量的初始化"></a>继承其它变量的初始化</h3><pre class="line-numbers language-python"><code class="language-python">WeightsNew <span class="token operator">=</span> tf<span class="token punctuation">.</span>Variable<span class="token punctuation">(</span>weights<span class="token punctuation">.</span>initialized_value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">"WeightsNew"</span><span class="token punctuation">)</span>init_WeightsNew_op <span class="token operator">=</span> tf<span class="token punctuation">.</span>variables_initializer<span class="token punctuation">(</span>var_list<span class="token operator">=</span><span class="token punctuation">[</span>WeightsNew<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>##运行Session</p><p>前面的操作只是把初始化的操作放到了计算图里，真正的初始化要在Session中运行</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">with</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sess<span class="token punctuation">:</span>    sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>init_all_op<span class="token punctuation">)</span>    sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>init_custom_op<span class="token punctuation">)</span>    sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>init_WeightsNew_op<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tensorflow学习日志（一）：Session和TensorBoard可视化</title>
      <link href="/2020/03/09/Tensorflow%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ASession%E5%92%8CTensorBoard%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
      <url>/2020/03/09/Tensorflow%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ASession%E5%92%8CTensorBoard%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>计算图是TensorFlow的核心概念，使用图（Graph）来表示计算任务，为了执行图的计算，图必须在会话（Session）里面启动，会话将图的操作分发到CPU、GPU等设备上执行，下面将介绍如何在TensorFlow里面创建计算图，运行计算图以及可视化计算图。</p><h2 id="创建计算图（Graph）"><a href="#创建计算图（Graph）" class="headerlink" title="创建计算图（Graph）"></a>创建计算图（Graph）</h2><p>计算图为张量（Tensor）的操作如两个Tensor的加减等，下面介绍一个由简单运算组成的计算图：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#首先导入所需的库</span><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">import</span> os<span class="token comment" spellcheck="true">#定义两个常数</span>a <span class="token operator">=</span> tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">5.0</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'a'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">10.0</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#定义一些基本的运算</span>x <span class="token operator">=</span> tf<span class="token punctuation">.</span>add<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'add'</span><span class="token punctuation">)</span>y <span class="token operator">=</span> tf<span class="token punctuation">.</span>div<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'divice'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面定义的运算的为下图中的计算图，有6个节点，两个运算，为了真正是每个运算中的张量得到结果，就必须在会话（Session）中启动这个图。下面将介绍创建一个会话。<br><img src="/2020/03/09/Tensorflow%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ASession%E5%92%8CTensorBoard%E5%8F%AF%E8%A7%86%E5%8C%96/1.png" alt></p><h2 id="运行计算图"><a href="#运行计算图" class="headerlink" title="运行计算图"></a>运行计算图</h2><p>Tensorflow使用Session会话运行计算图，tensorflow中的数据格式都是Tensor，不像numpy一样可以直接看到数字如下，如上面定义的a,b,x,y，把它们直接输出结果如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'a=:'</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'b=:'</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'a+b=:'</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'a-b=:'</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span>output<span class="token punctuation">:</span>a<span class="token operator">=</span><span class="token punctuation">:</span> Tensor<span class="token punctuation">(</span><span class="token string">"c_6:0"</span><span class="token punctuation">,</span> shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>float32<span class="token punctuation">)</span>b<span class="token operator">=</span><span class="token punctuation">:</span> Tensor<span class="token punctuation">(</span><span class="token string">"b_6:0"</span><span class="token punctuation">,</span> shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>float32<span class="token punctuation">)</span>a<span class="token operator">+</span>b<span class="token operator">=</span><span class="token punctuation">:</span> Tensor<span class="token punctuation">(</span><span class="token string">"add_6:0"</span><span class="token punctuation">,</span> shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>float32<span class="token punctuation">)</span>a<span class="token operator">-</span>b<span class="token operator">=</span><span class="token punctuation">:</span> Tensor<span class="token punctuation">(</span><span class="token string">"divice_6:0"</span><span class="token punctuation">,</span> shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>float32<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到输出的结果为Tensor变量，如果我们要查看Tensor的数据，我们要用到Sessor，Session是一个运行操作的环境，可以对Tensor进行操作并输出结果具体，即运行上面的计算图，调用run（）函数执行计算图。sess.run()输入必须为tensor，不能为numpy数字，否则会报错</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#创建会话</span><span class="token keyword">with</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sess<span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'a=:'</span><span class="token punctuation">,</span> sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'b=:'</span><span class="token punctuation">,</span> sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'a+b=:'</span><span class="token punctuation">,</span> sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'a-b=:'</span><span class="token punctuation">,</span> sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#因为Session环境会占用内存，多以用完后要关闭Session。</span>sess<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>output：a<span class="token operator">=</span><span class="token punctuation">:</span> <span class="token number">5.0</span>b<span class="token operator">=</span><span class="token punctuation">:</span> <span class="token number">10.0</span>a<span class="token operator">+</span>b<span class="token operator">=</span><span class="token punctuation">:</span> <span class="token number">15.0</span>a<span class="token operator">-</span>b<span class="token operator">=</span><span class="token punctuation">:</span> <span class="token number">0.5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样，我们就启动了计算图并输出了结果，下面我们用TensorBoard来可视化计算图。</p><h2 id="TensorBoard可视化"><a href="#TensorBoard可视化" class="headerlink" title="TensorBoard可视化"></a>TensorBoard可视化</h2><p>可视化分为几个步骤：<br>1.创建计算图<br>2.将创建的计算图保存在一个文件内<br>3.调用CMD可视化计算图。<br>下面我们举一个例子来可视化上面的计算图</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#导入所需要的库</span><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">import</span> os      <span class="token comment" spellcheck="true">#定义生成的图文件的目录.</span>tf<span class="token punctuation">.</span>app<span class="token punctuation">.</span>flags<span class="token punctuation">.</span>DEFINE_string<span class="token punctuation">(</span>    <span class="token string">'log_dir'</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'/logs'</span><span class="token punctuation">,</span>    <span class="token string">'Directory where event logs are written to.'</span><span class="token punctuation">)</span>FLAGS <span class="token operator">=</span> tf<span class="token punctuation">.</span>app<span class="token punctuation">.</span>flags<span class="token punctuation">.</span>FLAGS<span class="token comment" spellcheck="true">#生成计算图</span>a <span class="token operator">=</span> tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">5.0</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">10.0</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">)</span>x <span class="token operator">=</span> tf<span class="token punctuation">.</span>add<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'add'</span><span class="token punctuation">)</span>y <span class="token operator">=</span> tf<span class="token punctuation">.</span>div<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'divice'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#调用Session启动计算图并将计算图保存在目标文件内</span><span class="token keyword">with</span> tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sess<span class="token punctuation">:</span>    writer <span class="token operator">=</span> tf<span class="token punctuation">.</span>summary<span class="token punctuation">.</span>FileWriter<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>expanduser<span class="token punctuation">(</span>FLAGS<span class="token punctuation">.</span>log_dir<span class="token punctuation">)</span><span class="token punctuation">,</span> sess<span class="token punctuation">.</span>graph<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"output: "</span><span class="token punctuation">,</span> sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#关闭文件和Session</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>sess<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时在与此python文件目录内会生成一个图文件，我们打开此计算图文件的目录，<br><img src="/2020/03/09/Tensorflow%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ASession%E5%92%8CTensorBoard%E5%8F%AF%E8%A7%86%E5%8C%96/2.png" alt><br>打开CMD，然后输入cd ..返回上一级目录，输入tensorboard –logdir=”logs”，会返回一个网站，<br><img src="/2020/03/09/Tensorflow%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ASession%E5%92%8CTensorBoard%E5%8F%AF%E8%A7%86%E5%8C%96/3.png" alt>网站的最后四位为电脑的端口,<a href="http://localhost:6006/#graphs&amp;run=" target="_blank" rel="noopener">http://localhost:6006/#graphs&amp;run=</a>, 然后替换掉这个网站的6006就可以进入Tensorboard中<br><img src="/2020/03/09/Tensorflow%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ASession%E5%92%8CTensorBoard%E5%8F%AF%E8%A7%86%E5%8C%96/4.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Colab读取Google云盘里的文件</title>
      <link href="/2020/03/06/wq/"/>
      <url>/2020/03/06/wq/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">from</span> google<span class="token punctuation">.</span>colab <span class="token keyword">import</span> drivedrive<span class="token punctuation">.</span>mount<span class="token punctuation">(</span><span class="token string">'/content/drive'</span><span class="token punctuation">)</span>path <span class="token operator">=</span> <span class="token string">"/content/drive/My Drive"</span>os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Colab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab常用语法</title>
      <link href="/2020/03/06/Matlab%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/03/06/Matlab%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="结构体的使用"><a href="#结构体的使用" class="headerlink" title="结构体的使用"></a>结构体的使用</h2><h3 id="创建结构体"><a href="#创建结构体" class="headerlink" title="创建结构体"></a>创建结构体</h3><p>直接创建结构体数组，下面创建一个结构体数组</p><pre class="line-numbers language-python"><code class="language-python">Student<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'Gaoting'</span><span class="token punctuation">;</span>Student<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">'Femail'</span><span class="token punctuation">;</span>Student<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token string">'150'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="扩充结构体变量"><a href="#扩充结构体变量" class="headerlink" title="扩充结构体变量"></a>扩充结构体变量</h3><pre class="line-numbers language-python"><code class="language-python">Student<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'Hemingyue'</span><span class="token punctuation">;</span>Student<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">'Male'</span><span class="token punctuation">;</span>Student<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">174</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="访问结构体"><a href="#访问结构体" class="headerlink" title="访问结构体"></a>访问结构体</h3><pre class="line-numbers language-python"><code class="language-python">Student<span class="token punctuation">.</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="将结构体变量转化成数组"><a href="#将结构体变量转化成数组" class="headerlink" title="将结构体变量转化成数组"></a>将结构体变量转化成数组</h3><pre class="line-numbers language-python"><code class="language-python">cell2mat<span class="token punctuation">(</span>struct2cell<span class="token punctuation">(</span>load<span class="token punctuation">(</span><span class="token string">'结构体变量'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="高维数组的转置"><a href="#高维数组的转置" class="headerlink" title="高维数组的转置"></a>高维数组的转置</h3><p>假设A的维度为[1,2,3]</p><pre class="line-numbers language-python"><code class="language-python">B <span class="token operator">=</span> permute<span class="token punctuation">(</span>A<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>B的维度为[2,3,1],即第一个维度和第三个维度调换</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用seaborn数据可视化的几种方法</title>
      <link href="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
      <url>/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>seaborn是一个非常适合初学者的python库，仅需几行代码就可以实现数据的可视化，有丰富的图类型可以使用，下面我将介绍基中用处非常广泛的图。</p><h3 id="设置好环境"><a href="#设置好环境" class="headerlink" title="设置好环境"></a>设置好环境</h3><p>我们要用到pandas来读取要画的的数据</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plot<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h3><pre class="line-numbers language-python"><code class="language-python">failpath <span class="token operator">=</span> <span class="token string">"../fifa.csv"</span>fifa_data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token punctuation">(</span>fifa_path<span class="token punctuation">)</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token string">"Date"</span><span class="token punctuation">,</span> parse_dates<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h3><p>折线图可以很好的显示一段时间内的变化，并且多条线之间可以比较</p><pre class="line-numbers language-python"><code class="language-python">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>sigsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>lineplot<span class="token punctuation">(</span>date<span class="token operator">=</span>fifa_data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/1.png" alt></p><h4 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h4><p>柱状图在比较不同变量的数量很有用</p><pre class="line-numbers language-python"><code class="language-python">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figure<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Average Arrival Delay for SPirit Airlines Flights, by Month"</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span>flight_data<span class="token punctuation">.</span>index<span class="token punctuation">,</span> y<span class="token operator">=</span>flight_data<span class="token punctuation">[</span><span class="token string">'NK'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">"Arrival delay (in minutes)"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/%E6%9F%B1%E7%8A%B6%E5%9B%BE.png" alt></p><h3 id="热图"><a href="#热图" class="headerlink" title="热图"></a>热图</h3><p><code>annnot=True</code>为显示热图中的数字</p><pre class="line-numbers language-python"><code class="language-python">sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>data<span class="token operator">=</span>flight_data<span class="token punctuation">,</span> annot<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/%E7%83%AD%E5%9B%BE.png" alt></p><h3 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h3><p>散点图可以比较两个连续变量的关系，如果还有可以分类的变量，可以通过颜色编码比较三个变量的关系</p><pre class="line-numbers language-python"><code class="language-python">sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x<span class="token operator">=</span>insurance_data<span class="token punctuation">[</span><span class="token string">'bmi'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token operator">=</span>insurance_data<span class="token punctuation">[</span><span class="token string">'charges'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/%E6%95%A3%E7%82%B9%E5%9B%BE.png" alt><br>在散点图中添加回归线能更清楚地观察到数据的关系</p><pre class="line-numbers language-python"><code class="language-python">sns<span class="token punctuation">.</span>regplot<span class="token punctuation">(</span>x<span class="token operator">=</span>insurance_data<span class="token punctuation">[</span><span class="token string">'bmi'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token operator">=</span>insurance_data<span class="token punctuation">[</span><span class="token string">'charge'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/%E6%95%A3%E7%82%B9%E5%9B%BE2.png" alt><br>通过不同颜色区分一个分类的散点图，通过hue设置第三个变量</p><pre class="line-numbers language-python"><code class="language-python">sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x<span class="token operator">=</span>insurance_data<span class="token punctuation">[</span><span class="token string">'bmi'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token operator">=</span>insurance_data<span class="token punctuation">[</span><span class="token string">'charge'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> hue<span class="token operator">=</span>insurance_data<span class="token punctuation">[</span><span class="token string">'smoker'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/%E6%95%A3%E7%82%B9%E5%9B%BE3.png" alt></p><pre class="line-numbers language-python"><code class="language-python">sns<span class="token punctuation">.</span>lmplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">"bmi"</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">"charges"</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">"smoker"</span><span class="token punctuation">,</span> data<span class="token operator">=</span>insurance_data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/%E6%95%A3%E7%82%B9%E5%9B%BE4.png" alt></p><pre class="line-numbers language-python"><code class="language-python">sns<span class="token punctuation">.</span>swarmplot<span class="token punctuation">(</span>x<span class="token operator">=</span>insurance_data<span class="token punctuation">[</span><span class="token string">'smoker'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              y<span class="token operator">=</span>insurance_data<span class="token punctuation">[</span><span class="token string">'charges'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/%E6%95%A3%E7%82%B9%E5%9B%BE5.png" alt></p><h3 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h3><p>直方图可以显示单变量的数值分布</p><pre class="line-numbers language-python"><code class="language-python">sns<span class="token punctuation">.</span>distplot<span class="token punctuation">(</span>a<span class="token operator">=</span>iris_data<span class="token punctuation">[</span><span class="token string">'Petal Length (cm)'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> kde<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/%E7%9B%B4%E6%96%B9%E5%9B%BE.png" alt></p><h3 id="核密度曲线图"><a href="#核密度曲线图" class="headerlink" title="核密度曲线图"></a>核密度曲线图</h3><p>KDE可以用来显示单变量的估计的平滑的分布</p><pre class="line-numbers language-python"><code class="language-python">sns<span class="token punctuation">.</span>kdeplot<span class="token punctuation">(</span>data<span class="token operator">=</span>iris_data<span class="token punctuation">[</span><span class="token string">'Petal Length (cm)'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> shade<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/%E6%A0%B8%E5%AF%86%E5%BA%A6%E6%9B%B2%E7%BA%BF%E5%9B%BE.png" alt></p><h4 id="2D-KDE"><a href="#2D-KDE" class="headerlink" title="2D KDE"></a>2D KDE</h4><pre class="line-numbers language-python"><code class="language-python">sns<span class="token punctuation">.</span>jointplot<span class="token punctuation">(</span>x<span class="token operator">=</span>iris_data<span class="token punctuation">[</span><span class="token string">'Petal Length (cm)'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token operator">=</span>iris_data<span class="token punctuation">[</span><span class="token string">'Sepal Width (cm)'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> kind<span class="token operator">=</span><span class="token string">"kde"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/03/05/%E4%BD%BF%E7%94%A8seaborn%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/%E6%A0%B8%E5%AF%86%E5%BA%A62.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> seaborn </tag>
            
            <tag> 数据处理 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
